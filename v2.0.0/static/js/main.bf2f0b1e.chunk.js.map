{"version":3,"sources":["components/ProjectForm.js","components/ProjectList.js","components/TaskForm.js","components/TaskList.js","components/StatusBar.js","App.js","index.js"],"names":["ProjectForm","projects","setProjects","className","onSubmit","e","preventDefault","form","target","project","name","value","tasks","projectsCopy","_","cloneDeep","push","reset","htmlFor","type","id","required","maxLength","minLength","placeholder","ProjectList","activeProject","setActiveProject","map","index","Project","onClick","DeleteIcon","stopPropagation","indexOf","splice","deleteProject","TaskForm","formActive","setFormActive","Form","handletaskForm","task","description","targetProject","addTask","TaskList","useState","List","AddTaskButton","targetTask","taskIndex","deleteTask","StatusBar","user","setUser","newUser","prompt","localStorage","setItem","App","useEffect","hasOwnProperty","getItem","getLocalUser","jsonProjects","JSON","parse","getProjects","stringify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mNAoCeA,MAlCf,SAAqB,GAA2B,IAAzBC,EAAQ,EAARA,SAASC,EAAW,EAAXA,YAC9B,OACE,uBAAMC,UAAU,eAAeC,SAkBjC,SAA2BC,GACzBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,OACTC,EAAQ,GACdA,EAAQC,KAAKH,EAAK,gBAAgBI,MAClCF,EAAQG,MAAM,GAEd,IAAMC,EAAaC,IAAEC,UAAUd,GAC/BY,EAAaG,KAAKP,GAClBP,EAAYW,GACZN,EAAKU,SA5BsD,UACzD,uBAAOC,QAAQ,eAAc,SAC3B,uBACEC,KAAK,OACLT,KAAK,eACLU,GAAG,eACHC,UAAQ,EACRC,UAAU,KACVC,UAAU,IACVC,YAAY,mBAGhB,wBAAQL,KAAK,SAAShB,UAAU,wBAAuB,6BCoC9CsB,MAjDf,SAAqB,GAA6D,IAA3DxB,EAAQ,EAARA,SAAUyB,EAAa,EAAbA,cAAeC,EAAgB,EAAhBA,iBAAmBzB,EAAW,EAAXA,YACjE,OACE,sBAAKC,UAAU,cAAa,UAC1B,qBAAKA,UAAU,kBAAiB,sBAChC,oBAAIA,UAAU,eAAc,SACzBF,EAAS2B,KAAI,SAACnB,EAASoB,GACtB,OAAO,cAACC,EAAO,CAACrB,QAASA,GAAcoB,QAG3C,cAAC,EAAW,CAAC5B,SAAUA,EAAUC,YAAaA,OAIlD,SAAS4B,EAAQ,GAAc,IAAZrB,EAAO,EAAPA,QACjB,OACE,qBACEN,UAAWuB,IAAkBjB,EAAU,SAAW,GAClDsB,QAAS,WACPJ,EAAiBlB,IACjB,UAEDA,EAAQC,KACT,cAACsB,EAAU,CAACvB,QAASA,OAIzB,SAASuB,EAAW,GAAc,IAAZvB,EAAO,EAAPA,QACpB,OACE,sBACEN,UAAU,cACV4B,QAAS,SAAC1B,GACRA,EAAE4B,kBAUZ,SAAuBxB,GACrB,IAAMI,EAAaC,IAAEC,UAAUd,GACzB4B,EAAM5B,EAASiC,QAAQzB,GAC7BI,EAAasB,OAAON,EAAM,GAC1B3B,EAAYW,GAbJuB,CAAc3B,IACd,kBCuCG4B,MAzEf,SAAkB,GAOd,IANFX,EAAa,EAAbA,cACAY,EAAU,EAAVA,WACAC,EAAa,EAAbA,cACAtC,EAAQ,EAARA,SACAC,EAAW,EAAXA,YACAyB,EAAgB,EAAhBA,iBAEA,OAAID,GAAiBY,EACZ,cAACE,EAAI,IACA,KAEd,SAASA,IACP,OACE,uBAAMrC,UAAU,YAAYC,SAAUqC,EAAe,UACnD,wBAAOvB,QAAQ,YAAW,UACvB,IAAG,YAEJ,uBACEC,KAAK,OACLT,KAAK,YACLU,GAAG,YACHC,UAAQ,EACRC,UAAU,KACVC,UAAU,SAGd,wBAAOL,QAAQ,mBAAkB,UAC9B,IAAG,mBAEJ,uBACEC,KAAK,OACLT,KAAK,mBACLU,GAAG,mBACHE,UAAU,KACVC,UAAU,SAGd,wBAAQJ,KAAK,SAAShB,UAAU,SAAQ,oBAGxC,wBACEA,UAAU,SACV4B,QAAS,WACPQ,GAAc,IACd,sBAOV,SAASE,EAAepC,GACtBA,EAAEC,iBACFiC,GAAc,GACd,IAAMhC,EAAOF,EAAEG,OACTkC,EAAO,CACXhC,KAAMH,EAAK,aAAaI,MACxBgC,YAAapC,EAAK,oBAAoBI,QAK1C,SAAiBiC,EAAeF,GAC9B,IAAM7B,EAAeC,IAAEC,UAAUd,GAC3B4B,EAAQ5B,EAASiC,QAAQU,GAC/B/B,EAAagB,GAAOjB,MAAMI,KAAK0B,GAC/BxC,EAAYW,GACZc,EAAiBd,EAAagB,IAR9BgB,CAAQnB,EAAegB,GACvBnC,EAAKU,UCaM6B,MAxEf,SAAkB,GAA2D,IAAzDpB,EAAa,EAAbA,cAAezB,EAAQ,EAARA,SAASC,EAAW,EAAXA,YAAYyB,EAAgB,EAAhBA,iBACtD,EAAoCoB,oBAAS,GAAM,mBAA5CT,EAAU,KAAEC,EAAa,KAEhC,OAAIb,EAEA,sBAAKvB,UAAU,WAAU,UACvB,qBAAKA,UAAU,eAAc,mBAC7B,cAAC6C,EAAI,IACL,cAACC,EAAa,CAACX,WAAYA,IAC3B,cAAC,EAAQ,CAACA,WAAYA,EAAYC,cAAeA,EAAeb,cAAeA,EAAezB,SAAUA,EACtG0B,iBAAkBA,EAClBzB,YAAaA,OAIZ,KAGT,SAAS8C,IACP,OACE,oBAAI7C,UAAU,YAAW,SACtBuB,EAAcd,MAAMgB,KAAI,SAACc,EAAMb,GAC9B,OAAO,+BAAiBa,EAAKhC,KAC7B,sBAAMP,UAAU,mBAAkB,SAAEuC,EAAKC,cACzC,cAACX,EAAU,CAAEU,KAAMA,MAFHb,QAOtB,SAASG,EAAW,GAAS,IAARU,EAAI,EAAJA,KACnB,OACE,sBACEvC,UAAU,cACV4B,QAAS,YA2BjB,SAAoBa,EAAcM,GAClC,IAAMrC,EAAeC,IAAEC,UAAUd,GAC3B4B,EAAQ5B,EAASiC,QAAQU,GACzBO,EAAWtC,EAAagB,GAAOjB,MAAMsB,QAAQgB,GACnDrC,EAAagB,GAAOjB,MAAMuB,OAAOgB,EAAU,GAC3CjD,EAAYW,GACZc,EAAiBd,EAAagB,IAhCpBuB,CAAW1B,EAAcgB,IACzB,gBAUV,SAASO,EAAc,GACrB,OADiC,EAAVX,WAaX,KAVR,wBACAnC,UAAU,SACR4B,QAAS,WACPQ,GAAc,IACd,wBCxCGc,MAhBf,SAAmB,GAAoB,IAAlBC,EAAI,EAAJA,KAAMC,EAAO,EAAPA,QACzB,OACE,sBAAKpD,UAAU,aAAY,UACzB,qBAAKA,UAAU,WAAU,SAAEmD,IAC3B,wBAAQnD,UAAU,cAAc4B,QAIpC,WACE,IAAMyB,EAAQC,OAAO,8BAClBD,IACDD,EAAQC,GACRE,aAAaC,QAAQ,YAAYH,KARiB,sBCsDzCI,MArDf,WACE,MAAwBb,mBAAS,MAAK,mBAA/BO,EAAI,KAAEC,EAAO,KACpB,EAAgCR,mBAAS,IAAG,mBAArC9C,EAAQ,KAAEC,EAAW,KAC5B,EAA0C6C,mBAAS,MAAK,mBAAjDrB,EAAa,KAAEC,EAAgB,KAyBtC,OAvBAkC,qBAAU,WACRN,EASF,WACE,GAAIG,aAAaI,eAAe,aAC9B,OAAOJ,aAAaK,QAAQ,aAE9B,MAAO,QAbCC,IACR9D,EAeF,SAAqBoD,GAAO,IAAD,EAEnBW,EAAkD,QAAtC,EAACP,aAAaK,QAAQ,wBAAgB,QAAE,KAC1D,OAAOG,KAAKC,MAAMF,GAlBNG,MACX,IAEHP,qBAAU,WACR,IAAMI,EAAeC,KAAKG,UAAUpE,GACpCyD,aAAaC,QAAQ,gBAAiBM,KACrC,CAAChE,IAgBF,sBAAKE,UAAU,MAAK,UAClB,yBAAQA,UAAU,SAAQ,UACxB,oBAAIA,UAAU,UAAS,uBACvB,cAAC,EAAS,CAACmD,KAAMA,EAAMC,QAASA,OAElC,uBAAMpD,UAAU,OAAM,UACpB,cAAC,EAAW,CACVF,SAAUA,EACV0B,iBAAkBA,EAClBD,cAAeA,EACfxB,YAAaA,IAEf,cAAC,EAAQ,CACPwB,cAAeA,EACfzB,SAAUA,EACVC,YAAaA,EACbyB,iBAAkBA,OAGtB,wBAAQxB,UAAU,SAAQ,6CChDhCmE,IAASC,OACP,cAAC,IAAMC,WAAU,UACf,cAAC,EAAG,MAENC,SAASC,eAAe,W","file":"static/js/main.bf2f0b1e.chunk.js","sourcesContent":["import _ from 'loadsh';\n\nfunction ProjectForm({ projects,setProjects }) {\n  return (\n    <form className=\"project-form\" onSubmit={handleProjectForm}>\n      <label htmlFor=\"project-name\">\n        <input\n          type=\"text\"\n          name=\"project-name\"\n          id=\"project-name\"\n          required\n          maxLength=\"20\"\n          minLength=\"2\"\n          placeholder=\"project name\"\n        />\n      </label>\n      <button type=\"submit\" className=\"button project-button\">\n        Add Project\n      </button>\n    </form>\n  );\n\n  function handleProjectForm(e) {\n    e.preventDefault();\n    const form = e.target;\n    const project={};\n    project.name=form['project-name'].value;\n    project.tasks=[];\n\n    const projectsCopy=_.cloneDeep(projects);\n    projectsCopy.push(project);\n    setProjects(projectsCopy);\n    form.reset();\n  }\n}\n\nexport default ProjectForm;\n","import ProjectForm from \"./ProjectForm\";\nimport _ from 'loadsh';\n\nfunction ProjectList({ projects, activeProject, setActiveProject , setProjects}) {\n  return (\n    <div className=\"project-tab\">\n      <div className=\"project-heading\">Projects</div>\n      <ul className=\"project-list\">\n        {projects.map((project, index) => {\n          return <Project project={project} key={index} />;\n        })}\n      </ul>\n      <ProjectForm projects={projects} setProjects={setProjects}/>\n    </div>\n  );\n\n  function Project({ project }) {\n    return (\n      <li\n        className={activeProject === project ? 'active' : ''}\n        onClick={() => {\n          setActiveProject(project);\n        }}\n      >\n        {project.name}\n        <DeleteIcon project={project} />\n      </li>\n    );\n\n    function DeleteIcon({ project }) {\n      return (\n        <span\n          className=\"delete-icon\"\n          onClick={(e) => {\n            e.stopPropagation();\n            deleteProject(project);\n          }}\n        >\n          X\n        </span>\n      );\n    }\n  }\n\n  function deleteProject(project){\n    const projectsCopy=_.cloneDeep(projects);\n    const index=projects.indexOf(project);\n    projectsCopy.splice(index,1);\n    setProjects(projectsCopy);\n\n  }\n}\nexport default ProjectList;\n","import _ from 'loadsh';\n\nfunction TaskForm({\n  activeProject,\n  formActive,\n  setFormActive,\n  projects,\n  setProjects,\n  setActiveProject,\n}) {\n  if (activeProject && formActive) {\n    return <Form />;\n  } else return null;\n\n  function Form() {\n    return (\n      <form className=\"task-form\" onSubmit={handletaskForm}>\n        <label htmlFor=\"task-name\">\n          {' '}\n          Task Name\n          <input\n            type=\"text\"\n            name=\"task-name\"\n            id=\"task-name\"\n            required\n            maxLength=\"20\"\n            minLength=\"2\"\n          />\n        </label>\n        <label htmlFor=\"task-description\">\n          {' '}\n          Task Description\n          <input\n            type=\"text\"\n            name=\"task-description\"\n            id=\"task-description\"\n            maxLength=\"50\"\n            minLength=\"5\"\n          />\n        </label>\n        <button type=\"submit\" className=\"button\">\n          Submit\n        </button>\n        <button\n          className=\"button\"\n          onClick={() => {\n            setFormActive(false);\n          }}\n        >\n          Close\n        </button>\n      </form>\n    );\n  }\n  function handletaskForm(e) {\n    e.preventDefault();\n    setFormActive(false);\n    const form = e.target;\n    const task = {\n      name: form['task-name'].value,\n      description: form['task-description'].value,\n    };\n    addTask(activeProject, task);\n    form.reset();\n  }\n  function addTask(targetProject, task) {\n    const projectsCopy = _.cloneDeep(projects);\n    const index = projects.indexOf(targetProject);\n    projectsCopy[index].tasks.push(task);\n    setProjects(projectsCopy);\n    setActiveProject(projectsCopy[index]);\n\n  }\n}\n\nexport default TaskForm;\n","import { useState } from \"react\";\nimport TaskForm from \"./TaskForm\";\nimport _ from 'loadsh';\n\nfunction TaskList({ activeProject, projects,setProjects,setActiveProject }) {\n  const [formActive, setFormActive] = useState(false);\n\n  if (activeProject) {\n    return (\n      <div className=\"task-tab\">\n        <div className=\"task-heading\">Tasks</div>\n        <List />\n        <AddTaskButton formActive={formActive} />\n        <TaskForm formActive={formActive} setFormActive={setFormActive} activeProject={activeProject} projects={projects}\n          setActiveProject={setActiveProject}\n          setProjects={setProjects}  />\n      </div>\n    );\n  } else {\n    return null;\n  }\n\n  function List() {\n    return (\n      <ul className=\"task-list\">\n        {activeProject.tasks.map((task, index) => {\n          return <li key={index}>{task.name} \n          <span className=\"task-description\">{task.description}</span>\n          <DeleteIcon  task={task} /></li>;\n        })}\n      </ul>\n    );\n\n    function DeleteIcon({task}) {\n      return (\n        <span\n          className=\"delete-icon\"\n          onClick={() => {\n            deleteTask(activeProject,task);\n          }}\n        >\n          X\n        </span>\n      );\n\n     \n  }\n  }\n\n  function AddTaskButton({ formActive }) {\n    if (!formActive) {\n      return (\n        <button\n        className='button'\n          onClick={() => {\n            setFormActive(true);\n          }}\n        >\n          Add Task\n        </button>\n      );\n    }\n    else return null;\n  }\n  function deleteTask(targetProject,targetTask){\n  const projectsCopy = _.cloneDeep(projects);\n  const index = projects.indexOf(targetProject);\n  const taskIndex= projectsCopy[index].tasks.indexOf(targetTask);\n  projectsCopy[index].tasks.splice(taskIndex,1);\n  setProjects(projectsCopy);\n  setActiveProject(projectsCopy[index]);\n}\n}\n\n\n\nexport default TaskList;\n","function StatusBar({ user, setUser }) {\n  return (\n    <div className=\"status-bar\">\n      <div className=\"username\">{user}</div>\n      <button className=\"edit-button\" onClick={editUser}>Edit</button>\n    </div>\n  );\n\n  function editUser() {\n    const newUser=prompt('enter the name of new user');\n    if(newUser){\n      setUser(newUser);\n      localStorage.setItem('todo-user',newUser);\n    }\n  }\n}\nexport default StatusBar;\n","import { useState, useEffect } from 'react';\nimport ProjectList from './components/ProjectList';\nimport TaskList from './components/TaskList';\nimport StatusBar from './components/StatusBar';\n\nfunction App() {\n  const [user, setUser] = useState(null);\n  const [projects, setProjects] = useState([]);\n  const [activeProject, setActiveProject] = useState(null);\n\n  useEffect(() => {\n    setUser(getLocalUser());\n    setProjects(getProjects());\n  }, []);\n\n  useEffect(() => {\n    const jsonProjects = JSON.stringify(projects);\n    localStorage.setItem('todo-projects', jsonProjects);\n  }, [projects]);\n\n  function getLocalUser() {\n    if (localStorage.hasOwnProperty('todo-user')) {\n      return localStorage.getItem('todo-user');\n    }\n    return 'Guest';\n  }\n\n  function getProjects(user) {\n    // return sampleProjects();\n    const jsonProjects=localStorage.getItem('todo-projects')??\"[]\";\n    return JSON.parse(jsonProjects);    \n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"header\">\n        <h1 className=\"heading\">Todo List</h1>\n        <StatusBar user={user} setUser={setUser} />\n      </header>\n      <main className=\"main\">\n        <ProjectList\n          projects={projects}\n          setActiveProject={setActiveProject}\n          activeProject={activeProject}\n          setProjects={setProjects}\n        />\n        <TaskList\n          activeProject={activeProject}\n          projects={projects}\n          setProjects={setProjects}\n          setActiveProject={setActiveProject}\n        />\n      </main>\n      <footer className=\"footer\">CopyRight &copy; Prince Thind</footer>\n    </div>\n  );\n}\n\nexport default App;\n\n\nfunction sampleProjects() {\n  return [\n    {\n      name: 'proejct1',\n      tasks: [\n        { name: 't11', description: 'd11' },\n        { name: 't12', description: 'd12' },\n      ],\n    },\n    {\n      name: 'proejct2',\n      tasks: [\n        { name: 't21', description: 'd21' },\n        { name: 't22', description: 'd22' },\n      ],\n    },\n    {\n      name: 'proejct3',\n      tasks: [\n        { name: 't31', description: 'd31' },\n        { name: 't32', description: 'd32' },\n      ],\n    },\n  ];\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}